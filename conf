set -g default-shell /usr/bin/fish
set-option -ga terminal-overrides ",xterm-256color:Tc,"
set -g history-limit 100000

# Enable mouse support.
# This enables switching pane focus by clicking on panes, resizing panes by
# clicking and dragging, changing windows (tabs) by clicking on the tabs,
# scrolling with the scrollwheel.
# BUT this disables the mouse support of your terminal emulator for selecting
# text, right-clicking to get the context menu (including copy command) etc.
# You can get around this by holding down Shift while using the mouse to
# "click through" to the termuinal emulator.
# To send mouse commands to the terminal program running inside tmux (e.g. to
# resize vim splits with the mouse) ... ?
set -g mouse on

# Keyboard Shortcuts
# ------------------
# Bind Ctrl-a instead of Ctrl-b as prefix key.
set -g prefix C-a

# Browser-like tab (window) controls.
bind-key -n C-t new-window
bind-key -n C-PgDn next-window
bind-key -n C-PgUp previous-window
bind-key -n C-S-PgDn swap-window -t +1
bind-key -n C-S-PgUp swap-window -t -1
# TODO: Bind alt+1..8 to select tabs 1..8, and alt+9 to select the last tab,
# like in browsers.

# Ctrl+{left,right,up,down} to move between panes.
bind-key -n C-Left select-pane -L
bind-key -n C-Right select-pane -R
bind-key -n C-Up select-pane -U
bind-key -n C-Down select-pane -D

# Use the function keys to jump to windows,
bind-key -n  F1 if-shell -F '#{==:#I,1}' 'last-window' 'select-window -t :1'
bind-key -n  F2 if-shell -F '#{==:#I,2}' 'last-window' 'select-window -t :2'
bind-key -n  F3 if-shell -F '#{==:#I,3}' 'last-window' 'select-window -t :3'
bind-key -n  F4 if-shell -F '#{==:#I,4}' 'last-window' 'select-window -t :4'
bind-key -n  F5 if-shell -F '#{==:#I,5}' 'last-window' 'select-window -t :5'
bind-key -n  F6 if-shell -F '#{==:#I,6}' 'last-window' 'select-window -t :6'
bind-key -n  F7 if-shell -F '#{==:#I,7}' 'last-window' 'select-window -t :7'
bind-key -n  F8 if-shell -F '#{==:#I,8}' 'last-window' 'select-window -t :8'
bind-key -n  F9 if-shell -F '#{==:#I,9}' 'last-window' 'select-window -t :9'
bind-key -n  F10 if-shell -F '#{==:#I,10}' 'last-window' 'select-window -t :10'
bind-key -n  F11 if-shell -F '#{==:#I,11}' 'last-window' 'select-window -t :11'
bind-key -n  F12 if-shell -F '#{==:#I,12}' 'last-window' 'select-window -t :12'
bind-key F1 send-keys F1
bind-key F2 send-keys F2
bind-key F3 send-keys F3
bind-key F4 send-keys F4
bind-key F5 send-keys F5
bind-key F6 send-keys F6
bind-key F7 send-keys F7
bind-key F8 send-keys F8
bind-key F9 send-keys F9
bind-key F10 send-keys F10
bind-key F11 send-keys F11
bind-key F12 send-keys F12

# Enable vi-like key bindings for moving around in copy mode.
set-window-option -g mode-keys vi

# Status Line
# -----------
set -g status-position top
set -g status-bg default
set -g status-fg default
set -g window-status-bg default
set -g window-status-fg default
set-window-option -g window-status-current-bg white
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-attr none
set-window-option -g window-status-format ' #I:#W#F '
set-window-option -g window-status-current-format ' #I:#W#F '
set -g window-status-separator ''  # Remove space between window titles.
set -g status-left '#S '
set -g status-right '#{prefix_highlight}'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=default,bg=blue'

# Rename windows to the names of the commands currently running in them
# (but not if the window has been given a name manually).
set-window-option -g automatic-rename on

# Start numbering windows and panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 1

run-shell ~/.tmux-sensible/sensible.tmux
run-shell ~/.tmux-yank/yank.tmux
run-shell ~/.tmux-prefix-highlight/prefix_highlight.tmux
run-shell ~/.tmux-pain-control/pain_control.tmux
run-shell ~/.tmux-sessionist/sessionist.tmux
