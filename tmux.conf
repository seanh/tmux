set -g default-shell /usr/bin/fish
set-option -ga terminal-overrides ",xterm-256color:Tc,"
set -g history-limit 100000

# Enable mouse support.
# This enables switching pane focus by clicking on panes, resizing panes by
# clicking and dragging, changing windows (tabs) by clicking on the tabs,
# scrolling with the scrollwheel.
# BUT this disables the mouse support of your terminal emulator for selecting
# text, right-clicking to get the context menu (including copy command) etc.
# You can get around this by holding down Shift while using the mouse to
# "click through" to the termuinal emulator.
# To send mouse commands to the terminal program running inside tmux (e.g. to
# resize vim splits with the mouse) ... ?
set -g mouse on

# Keyboard Shortcuts
# ------------------

# Make Shift-Page Up and Shift-Page Down scroll, as they normally would in
# Gnome Terminal. Note that once in copy mode just Page Up and Page Down on
# their own will scroll, you don't have to keep holding down Shift, but you can
# do if you want.
bind -n S-Pageup copy-mode -u
bind -n S-Pagedown send-keys Pagedown

# Browser-like tab (window) controls.
bind-key -n C-t new-window
bind-key -n C-PgDn next-window
bind-key -n C-PgUp previous-window
bind-key -n C-S-PgDn swap-window -t +1
bind-key -n C-S-PgUp swap-window -t -1
# TODO: Bind alt+1..8 to select tabs 1..8, and alt+9 to select the last tab,
# like in browsers.

# Ctrl+{left,right,up,down} to move between panes.
bind-key -n C-Left select-pane -L
bind-key -n C-Right select-pane -R
bind-key -n C-Up select-pane -U
bind-key -n C-Down select-pane -D

# Use the function keys to jump to windows,
bind-key -n  F1 if-shell -F '#{==:#I,1}' 'last-window' 'select-window -t :1'
bind-key -n  F2 if-shell -F '#{==:#I,2}' 'last-window' 'select-window -t :2'
bind-key -n  F3 if-shell -F '#{==:#I,3}' 'last-window' 'select-window -t :3'
bind-key -n  F4 if-shell -F '#{==:#I,4}' 'last-window' 'select-window -t :4'
bind-key -n  F5 if-shell -F '#{==:#I,5}' 'last-window' 'select-window -t :5'
bind-key -n  F6 if-shell -F '#{==:#I,6}' 'last-window' 'select-window -t :6'
bind-key -n  F7 if-shell -F '#{==:#I,7}' 'last-window' 'select-window -t :7'
bind-key -n  F8 if-shell -F '#{==:#I,8}' 'last-window' 'select-window -t :8'
bind-key -n  F9 if-shell -F '#{==:#I,9}' 'last-window' 'select-window -t :9'
bind-key -n  F10 if-shell -F '#{==:#I,10}' 'last-window' 'select-window -t :10'
bind-key -n  F11 if-shell -F '#{==:#I,11}' 'last-window' 'select-window -t :11'
bind-key -n  F12 if-shell -F '#{==:#I,12}' 'last-window' 'select-window -t :12'
bind-key F1 send-keys F1
bind-key F2 send-keys F2
bind-key F3 send-keys F3
bind-key F4 send-keys F4
bind-key F5 send-keys F5
bind-key F6 send-keys F6
bind-key F7 send-keys F7
bind-key F8 send-keys F8
bind-key F9 send-keys F9
bind-key F10 send-keys F10
bind-key F11 send-keys F11
bind-key F12 send-keys F12

# Enable vi-like key bindings for moving around in copy mode.
set-window-option -g mode-keys vi

# Status Line
# -----------
set -g status-style "bg=default fg=#ffffff"
set -g status-left '' # Don't display the session name in the bottom left (status-left is "[#S] " by default).
set -g status-right '#{prefix_highlight}'
set -g window-status-current-style "bg=default fg=default,reverse"
set -g window-status-last-style "bg=#444444 fg=#ffffff"
set -g window-status-activity-style "bg=yellow fg=default"
set -g window-status-bell-style "bg=yellow fg=default"
set -g window-status-separator ''  # No spaces between windows.
set -g window-status-format "#{?window_start_flag,, }#I:#W#{?window_flags,#F, } "
set -g window-status-current-format "#{?window_start_flag,, }#I:#W#{?window_flags,#F, } "

# Window title
# ------------
set -g set-titles on
set -g set-titles-string 'tmux (#S)'

# Rename windows to the names of the commands currently running in them
# (but not if the window has been given a name manually).
set-window-option -g automatic-rename on

# Start numbering windows and panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 1

# Prefix+R to source this .tmux.conf file.
run-shell ~/.tmux/plugins/tmux-sensible/sensible.tmux
# Swap tmux-sensible's `Ctrl-a a` (last-window) and `Ctrl-a Ctrl-a`
# (send-prefix) so that:
# `Ctrl-a Ctrl-a` goes to the last window.
# `Ctrl-a a` sends Ctrl-a into a nested tmux.
bind-key C-b last-window
bind-key b send-prefix

# Prefix+y copies what's on your shell's command line to the clipboard.
# Prefix+Y copies the current pane's working directory to the command line.
# In copy mode y copies the current selection to the clipboard, and
# Y pastes the current selection onto the command line.
run-shell ~/.tmux/plugins/tmux-yank/yank.tmux
set -g @yank_action 'copy-pipe'  # Don't automatically leave copy mode after yanking text.

# Prefix+h,j,k,l or arrow keys to move between panes.
# Prefix+H,J,K,L resizes panes (but Shift+arrows doesn't work).
# Prefix+| or - splits the current pane vertically or horizontally.
# Prefix+\ or Prefix+_ does a full width/height split horizontally or vertically.
run-shell ~/.tmux/plugins/tmux-pain-control/pain_control.tmux
# Prefix+< or > moves the current pane.
bind-key -r "<" swap-pane -t -1
bind-key -r ">" swap-pane -t +2

# Prefix+g prompts for a session name and changes to that session.
# Prefix+C to create a new named session.
# Prefix+X to kill the current session without exiting tmux.
# Prefix+S change to the last session.
# Prefix+@ promotes the current pane into a new session.
# (Note that prefix+! already promotes the current pane into a new window, too.)
run-shell ~/.tmux/plugins/tmux-sessionist/sessionist.tmux

run-shell ~/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux
